<?php namespace MiniUrl;

//require_once "class.url.php";


Class Pars extends Url{

    public $url_to_parse;

    public $domen;

    public $hash;

    public $tt;

    public $dd;

    public $query;


    public function get_url($s)
    {
        $this->url_to_parse=$this->url_get_and_valid($s);
    }

    public function parse_ulr($s)
    {
        $this->get_url($s);
        $this->unparse_url(parse_url($this->url_to_parse));

        $this->domen = parse_url($this->url_to_parse,PHP_URL_HOST);
        $this->hash = $this->tt;

        $this->query = parse_url($this->url_to_parse,PHP_URL_QUERY);
    }

    public function Show()
    {
        parent::Show(); // TODO: Change the autogenerated stub
        echo '<br> домен'.$this->domen.'<br>';
        echo '<br> хеш'.$this->hash.'<br>';
        echo '<br> хеш2'.$this->tt.'<br>';
    }
    public function unparse_url($parsed_url) {
        $scheme   = isset($parsed_url['scheme']) ? $parsed_url['scheme'] . '://' : '';
        $host     = isset($parsed_url['host']) ? $parsed_url['host'] : '';
        $port     = isset($parsed_url['port']) ? ':' . $parsed_url['port'] : '';
        $user     = isset($parsed_url['user']) ? $parsed_url['user'] : '';
        $pass     = isset($parsed_url['pass']) ? ':' . $parsed_url['pass']  : '';
        $pass     = ($user || $pass) ? "$pass@" : '';
        $path     = isset($parsed_url['path']) ? $parsed_url['path'] : '';
        $query    = isset($parsed_url['query']) ? '?' . $parsed_url['query'] : '';
        $fragment = isset($parsed_url['fragment']) ? '#' . $parsed_url['fragment'] : '';

        $this->tt = $path.$query.$fragment.$port;
        $this->dd=$scheme.$host;
       // $this->ss =$user.$pass.$host.$port.$path.$query.$fragment;
        return $this->tt;
    }
}